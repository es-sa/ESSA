{"version":3,"file":"main.js","sources":["../lib/js/es-sa.ts"],"sourcesContent":["interface ESSAObj {\n  saNodes: HTMLElement[];\n  threshold: number;\n  setThreshold: (threshold: string | number) => void;\n  intersection: () => void;\n  init: (threshold?: 0 | 0.1 | 0.2 | 0.3 | 0.4 | 0.5 | 0.6 | 0.7 | 0.8 | 0.9 | 1) => void;\n}\n\nexport const ESSA: ESSAObj = {\n  /** 교차점을 지나는 대상 요소들을 저장할 NodeList */\n  saNodes: [],\n  /** Scroll 위치와 대상 요소의 교차점을 판단하는 기준값 */\n  threshold: 0.1,\n  /** threshold 값을 설정하는 함수 */\n  setThreshold: function (threshold) {\n    if (typeof threshold === 'string') {\n      threshold = threshold.trim();\n      if (threshold === '') {\n        console.warn('threshold value is empty, using default value 0.1');\n        threshold = 0.1;\n      }\n      if (!isFinite(Number(threshold))) {\n        console.warn(`invalid threshold value \"${threshold}\", using default value 0.1`);\n        threshold = 0.1;\n      }\n      threshold = Number(threshold);\n    }\n    if (typeof threshold !== 'number') {\n      console.warn(`invalid threshold value \"${threshold}\", using default value 0.1`);\n      threshold = 0.1;\n    }\n    if (threshold > 1) {\n      console.warn(\n        `threshold value \"${threshold}\" cannot be greater than 1, using maximum value 1`,\n      );\n      threshold = 1;\n    } else if (threshold < 0) {\n      console.warn(`threshold value \"${threshold}\" cannot be less than 0, using minimum value 0`);\n      threshold = 0;\n    }\n\n    ESSA.threshold = threshold;\n  },\n  /** intersection observer 등록 함수 */\n  intersection: function () {\n    if (ESSA.saNodes && ESSA.saNodes.length) {\n      for (const saNode of ESSA.saNodes) {\n        io.observe(saNode);\n      }\n    }\n  },\n  /**\n   * 플러그인 초기화 함수\n   * @threshold: Scroll 위치와 대상 요소의 교차점을 판단하는 기준값\n   * */\n  init: function (threshold) {\n    if (!ESSA.saNodes || ESSA.saNodes.length === 0) {\n      throw new Error('No matching elements found');\n    }\n    if (threshold !== undefined) {\n      ESSA.setThreshold(threshold);\n    }\n    ESSA.intersection();\n  },\n};\n/** js Observer API 커스텀 함수 */\nconst io = new IntersectionObserver(\n  (nodes) => {\n    nodes.forEach((node) => {\n      const target = node.target;\n      if (!(target instanceof HTMLDivElement)) return false;\n      /** 애니메이션을 한 번만 실행할 것인지 여부 */\n      const once = target.dataset.saOnce !== 'true';\n      if (once) {\n        if (node.isIntersecting) {\n          target.classList.add('saShow'); // 애니메이션 클래스 추가\n        } else if (!node.isIntersecting && target.classList.contains('saShow')) {\n          target.classList.remove('saShow'); // 애니메이션 클래스 제거\n        }\n      } else {\n        if (node.isIntersecting) {\n          target.classList.add('saShow'); // 애니메이션 클래스 추가\n          io.unobserve(target); // 교차점 감시 중지\n        }\n      }\n    });\n  },\n  {\n    threshold: ESSA.threshold, // 기준값 설정\n  },\n);\n"],"names":["ESSA","saNodes","threshold","setThreshold","trim","console","warn","isFinite","Number","intersection","length","saNode","io","observe","init","Error","undefined","IntersectionObserver","nodes","forEach","node","target","HTMLDivElement","dataset","saOnce","isIntersecting","classList","add","contains","remove","unobserve"],"mappings":"AAQa,MAAAA,EAAgB,CAE3BC,QAAS,GAETC,UAAW,GAEXC,aAAc,SAAUD,GACG,iBAAdA,IAES,MADlBA,EAAYA,EAAUE,UAEpBC,QAAQC,KAAK,qDACbJ,EAAY,IAETK,SAASC,OAAON,MACnBG,QAAQC,KAAK,4BAA4BJ,+BACzCA,EAAY,IAEdA,EAAYM,OAAON,IAEI,iBAAdA,IACTG,QAAQC,KAAK,4BAA4BJ,+BACzCA,EAAY,IAEVA,EAAY,GACdG,QAAQC,KACN,oBAAoBJ,sDAEtBA,EAAY,GACHA,EAAY,IACrBG,QAAQC,KAAK,oBAAoBJ,mDACjCA,EAAY,GAGdF,EAAKE,UAAYA,CAClB,EAEDO,aAAc,WACZ,GAAIT,EAAKC,SAAWD,EAAKC,QAAQS,OAC/B,IAAK,MAAMC,KAAUX,EAAKC,QACxBW,EAAGC,QAAQF,EAGhB,EAKDG,KAAM,SAAUZ,GACd,IAAKF,EAAKC,SAAmC,IAAxBD,EAAKC,QAAQS,OAChC,MAAM,IAAIK,MAAM,mCAEAC,IAAdd,GACFF,EAAKG,aAAaD,GAEpBF,EAAKS,cACN,GAGGG,EAAK,IAAIK,sBACZC,IACCA,EAAMC,SAASC,IACb,MAAMC,EAASD,EAAKC,OACpB,KAAMA,aAAkBC,gBAAiB,OAAO,EAET,SAA1BD,EAAOE,QAAQC,OAEtBJ,EAAKK,eACPJ,EAAOK,UAAUC,IAAI,WACXP,EAAKK,gBAAkBJ,EAAOK,UAAUE,SAAS,WAC3DP,EAAOK,UAAUG,OAAO,UAGtBT,EAAKK,iBACPJ,EAAOK,UAAUC,IAAI,UACrBf,EAAGkB,UAAUT,GAEhB,GACD,GAEJ,CACEnB,UAAWF,EAAKE"}